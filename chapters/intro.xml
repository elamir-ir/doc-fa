<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info><title>مقدمه</title></info>

  <section xml:id="intro-whatis">
   <info><title>PHP چیست؟</title></info>
   <para>
    <acronym>PHP</acronym> (مخفف <literal>PHP: Hypertext
    Preprocessor</literal>) یک زبان پرکاربرد، متن باز و چند منظوره
    اسکریپت نویسی ازت که به شکل خاص مناسب توسعه
    وب است و قابلیت تعبیه به درون HTML را داراست.
   </para>
   <para>
    ایول، اما یعنی چه؟ مثال:
   </para>
   <para>
    <example>
     <info><title>یک مثال جهت معرفی</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE html>
<html>
    <head>
        <title>Example</title>
    </head>
    <body>

        <?php
            echo "Hi, I'm a PHP script!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
   به جای استفاده از دستور های فراوان برای خروجی HTML گرفتن (مثل C یا Perl)،
    صفحات PHP می‌توانند شامل HTML به همراه کد تعبیه شده ای باشند که
    "کاری" (در این مورد، خروجی دادن "Hi, I'm a PHP script!") انجام می‌دهد.
    کد PHP درون <link
    linkend="language.basic-syntax.phpmode">عملگر های مخصوص شروع و پایان پردازش <code>&lt;?php</code> و <code>?&gt;</code></link>
    قرار می‌گیرد که به شما اجازه ورود و خروج به "وضعیت PHP" را می‌دهد.
   </para>
   <para>
    چیزی که PHP را از زبان سمت کاربری مثل JavaScript متمایز می‌کند
    این است که کد روی سرور اجرا می‌شود، جهت تولید HTML
    که به کاربر فرستاده می‌شود. کاربر نتیجه اجرای اسکریپت روی سرور را دریافت خواهد کرد
    اما نخواهد دانست که کد مربوطه چه بوده. شما می‌توانید وب‌سرور خود را
    جوری تنظیم کنید که تمام فایلهای HTML را با PHP پردازش کند و
    در نتیجه واقعا هیچ راهی برای کاربر وجود ندارد که پی ببرد چه در آستین دارید.
   </para>
   <para>
    بهترین چیز درباره PHP این است که هم برای یک تازه‌کار
    بسیار ساده است، و هم ویژگی های پیشرفته بسیاری را در
    اختیار برنامه نویس خبره قرار می‌دهد. از خواندن لیست
    بلند و بالای ویژگی های PHP نترسید. طی اندک زمانی می‌توانید
    وارد گود شوید و طی چند ساعت شروع به نوشتن اسکریپت های ساده کنید.
    </para>
   <para>
    با وجود اینکه توسعه PHP متمرکز بر اسکریپت نویسی سمت سرور است،
    می‌توانید کارهای بیشتری نیز با آن بکنید. به خواندن ادامه دهید
    و از بخش <link linkend="intro-whatcando">PHP قادر به انجام چه کار هاییست؟</link>
    اطلاعات بیشتری کسب کنید، یا اگر علاقه مند به برنامه نویسی هستید
    مستقیما به <link linkend="tutorial">آموزش مقدماتی</link>
    مراجعه کنید.
   </para>
  </section>

  <section xml:id="intro-whatcando">
   <info><title>PHP قادر به انجام چه کار هاییست؟</title></info>
   <para>
   هر کاری. PHP عمدتا متمرکز بر اسکریپت نویسی سمت سرور است،
   پس می‌توانید هر کاری که سایر برنامه های CGI قادر بر آنند را
   انجام دهید، مثل گردآوری داده های فرم، تولید محتوای صفحات پویا
   یا ارسال و دریافت کوکی. اما PHP قادر به بسیار بیش از این است.
   </para>
   <para>
    ۳ حیطه وجود دارد که در آن می‌توان از PHP استفاده کرد.
    <itemizedlist>
     <listitem>
      <simpara>
       اسکریپت نویسی سمت سرور. این سنتی ترین و اصلی ترین
       حیطه هدف برای PHP است. برای راه اندازی اش به ۳ چیز
       نیاز دارید: یک PHP parser (CGI یا ماژول سرور)،
       یک وب سرور و یک مرورگر وب. نیاز دارید تا وب سرور
       را به همراه یک نصب PHP متصل به آن اجرا کنید. شما
       قادرید تا به خروجی برنامه PHP با یک مرورگر وب دسترسی
       پیدا کرده و صفحه PHP را از طریق سرور مشاهده کنید.
       تمام این موارد بر روی دستگاه شخصی شما قابل اجراست
       اگر صرفا قصد تجربه و آزمایش برنامه نویسی PHP را دارید.
       جهت اطلاعات بیشتر به بخش
       <link linkend="install">دستورالعمل های نصب</link>
       مراجعه کنید
       </simpara>
     </listitem>
     <listitem>
      <simpara>
       اسکریپت‌نویسی خط فرمان. شما می‌تواند اسکریپتی با PHP بنویسید که بدون هیچ
       سرور یا مرورگری قابل اجرا باشد. برای این کار فقط به پارسر PHP نیاز خواهید داشت.
     این طریقه استفاده، برای اسکریپت هایی که به شکل معمول با cron 
     (روی *نیک یا لینوکس) یا Task Scheduler (روی ویندوز) اجرا می‌شوند ایده‌آل است.  
     این اسکریپت ها می‌توانند برای اعمال ساده پردازش متن نیز استفاده شوند.
     برای اطلاعات بیشتر به
       <link linkend="features.commandline">موارد استفاده خط‌فرمان PHP</link>
       مراجعه کنید.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       نوشتن نرم‌افزار های دسکتاپ. احتمالا PHP بهترین زبان برای ساخت یک نرم‌افزار
       دسکتاپ دارای رابط کاربری گرافیکی نباشد، اما اگر شما آشنایی خیلی خوبی با
       PHP دارید و همچنین مایل به استفاده از ویژگی های پیشرفته PHP در نرم‌افزار
       سمت‌کاربر خود هستید، می‌توانید از PHP-GTK نیز برای نوشتن این نوع نرم‌افزار ها
       استفاده کنید. علاوه بر آن از این طریق قادر به نوشتن نرم‌افزار های چند
       پلتفرمه نیز هستید. PHP-GTK یک افزونه PHP است و در توزیع اصلی موجود نیست.
       اگر به PHP-GTK علاقه مند هستید، از <link xlink:href="&url.php.gtk;">وبسایت
       مربوطه اش</link> بازدید کنید.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP قابلیت <link linkend="install">استفاده</link> بر روی تمامی سیستم عامل های مطرح را دارد، شامل
    لینوکس، بسیاری از انواع یونیکس (شامل HP-UX، سولاریس و OpenBSD)،
    مایکروسافت ویندوز، مک، RISC OS و احتمالا تعدادی دیگر.
    امروزه PHP توسط بسیاری از وب‌سرور ها نیز پشتیبانی می‌شود. شامل
    آپاچی، IIS و بسیاری دیگر. این شامل هر وب‌سروری است که از
    باینری FastCGI PHP بهره بگیرد، مثل lighttpd و nginx.
    PHP هم می‌تواند به عنوان یک ماژول و هم به عنوان یک CGI processor کار کند.
   </para>
   <para>
    So with PHP, you have the freedom of choosing an operating
    system and a web server. Furthermore, you also have the choice
    of using procedural programming or object-oriented
    programming (OOP), or a mixture of them both.
   </para>
   <para>
    With PHP you are not limited to output HTML. PHP's abilities
    includes outputting images, PDF files and even Flash movies
    (using libswf and Ming) generated on the fly. You can also
    output easily any text, such as XHTML and any other XML file.
    PHP can autogenerate these files, and save them in the file
    system, instead of printing it out, forming a server-side
    cache for your dynamic content.
   </para>
   <para>
    One of the strongest and most significant features in PHP is its
    support for a <link linkend="refs.database">wide range of databases</link>. 
    Writing a database-enabled web page is incredibly simple using one of
    the database specific extensions (e.g., for <link linkend="book.mysqli">mysql</link>),
    or using an abstraction layer like <link linkend="book.pdo">PDO</link>, or connect
    to any database supporting the Open Database Connection standard via the
    <link linkend="book.uodbc">ODBC</link> extension. Other databases may utilize
    <link linkend="book.curl">cURL</link> or <link linkend="book.sockets">sockets</link>,
    like CouchDB.
   </para>
   <para>
    PHP also has support for talking to other services using protocols
    such as LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (on Windows) and
    countless others. You can also open raw network sockets and
    interact using any other protocol. PHP has support for the WDDX
    complex data exchange between virtually all Web programming
    languages. Talking about interconnection, PHP has support for
    instantiation of Java objects and using them transparently
    as PHP objects.
   </para>
   <para>
    PHP has useful <link linkend="refs.basic.text">text processing</link> features,
    which includes the Perl compatible regular expressions (<link linkend="book.pcre">PCRE</link>),
    and many extensions and tools to <link linkend="refs.xml">parse and access XML documents</link>.
    PHP standardizes all of the XML extensions on the solid base of <link linkend="book.libxml">libxml2</link>,
    and extends the feature set adding <link linkend="book.simplexml">SimpleXML</link>,
    <link linkend="book.xmlreader">XMLReader</link> and <link linkend="book.xmlwriter">XMLWriter</link> support.
   </para>
   <para>
    And many other interesting extensions exist, which are categorized both
    <link linkend="extensions">alphabetically</link> and by <link linkend="funcref">category</link>.
    And there are additional PECL extensions that may or may not be documented
    within the PHP manual itself, like <link xlink:href="&url.xdebug;">XDebug</link>.
   </para>
   <para>
    As you can see this page is not enough to list all
    the features and benefits PHP can offer. Read on in
    the sections about <link linkend="install">installing
    PHP</link>, and see the <link linkend="funcref">function
    reference</link> part for explanation of the extensions
    mentioned here.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
